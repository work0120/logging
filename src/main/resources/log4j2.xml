<?xml version="1.0" encoding="UTF-8" ?>
<!-- ========================== 自定义输出格式说明================================ -->
<!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
<!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数 -->
<!-- #%c 输出所属的类目，通常就是所在类的全名 -->
<!-- #%t 输出产生该日志事件的线程名 -->
<!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->
<!-- #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 
	22：10：28，921 -->
<!-- #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10) -->
<!-- ========================================================================== -->

<!-- ========================== 输出方式说明================================ -->
<!-- Log4j提供的appender有以下几种: -->
<!-- org.apache.log4j.ConsoleAppender(控制台), -->
<!-- org.apache.log4j.FileAppender(文件), -->
<!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->
<!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件), -->
<!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方) -->
<!-- ========================================================================== -->
<!-- status=debug 可以查看log4j的装配过程 -->
<Configuration status="info" monitorInterval="5">
	<Properties>
		<property name="LOG_HOME">log</property>
		<!-- 日志备份目录 -->
		<property name="BACKUP_HOME">{LOG_HOME}/backup</property>
		<property name="STAT_NAME">stat</property>
		<property name="SERVER_NAME">log</property>
	</Properties>

	<Appenders>
		<!-- 定义控制台输出 -->
		<Console name="Console" target="SYSTEM_OUT">
			<PatternLayout>
				<pattern>
					<!-- %d{HH:mm:ss.SSS} [%c][%t] %highlight{%-5level%logger{36} - %msg %n}{FATAL=white,ERROR=red, WARN=blue, INFO=black,DEBUG=green, TRACE=blue} -->
					%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg %n
				</pattern>
			</PatternLayout>
		</Console>

		<!-- SYSTEM_OUT SYSTEM_ERR -->
		<Console name="Console-sql" target="SYSTEM_OUT">
			<PatternLayout
				pattern="%d{HH:mm:ss.SSS} [%c][%t] %-5level %logger{36} - %msg%n" />
		</Console>
		<Console name="Console-logjdbc" target="SYSTEM_OUT">
			<PatternLayout
				pattern="%d{HH:mm:ss.SSS} [%c][%t] %-5level %logger{36} - %msg%n" />
		</Console>
		<!-- 程序员调试日志 -->
		<!-- <RollingRandomAccessFile name="DevLog" fileName="${LOG_HOME}/${SERVER_NAME}" 
			filePattern="${LOG_HOME}/${SERVER_NAME}.%d{yyyy-MM-dd-HH}.log"> <PatternLayout 
			pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" 
			/> <Policies> <TimeBasedTriggeringPolicy interval="1" modulate="true" /> 
			<SizeBasedTriggeringPolicy size="250 MB"/> </Policies> <DefaultRolloverStrategy 
			max="20"/> </RollingRandomAccessFile> -->


		<!-- <SMTP name="Mail" subject="错误日志" to="296673340@qq.com" from="work0120@163.com" 
			smtpHost="smtp.163.com" smtpUsername="work0120@163.com" smtpPassword="" smtpPort="25" 
			bufferSize="50"> </SMTP> -->


		<!-- 游戏产品数据分析日志 -->
		<!-- <RollingRandomAccessFile name="ProductLog" fileName="${LOG_HOME}/${SERVER_NAME}_${STAT_NAME}" 
			filePattern="${LOG_HOME}/${SERVER_NAME}_${STAT_NAME}.%d{yyyy-MM-dd-HH}.log"> 
			<PatternLayout> <Pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] 
			- %msg%n</Pattern> </PatternLayout> <Policies> <TimeBasedTriggeringPolicy 
			interval="1" modulate="true" /> </Policies> </RollingRandomAccessFile> -->

		<!-- <JDBC name="databaseAppender" tableName="application_log"> <DriverManager 
			url="jdbc:mysql://localhost:3306/exampleDb" username="root" password="" /> 
			<Column name="eventDate" isEventTimestamp="true" /> <Column name="level" 
			pattern="%level" /> <Column name="logger" pattern="%logger" /> <Column name="message" 
			pattern="%message" /> <Column name="exception" pattern="%ex{full}" /> </JDBC> -->
	</Appenders>

	<Loggers>

		<Root level="debug">
			<!-- <AppenderRef ref="Mail"/> -->
			<appender-ref ref="Console" />
		</Root>
	</Loggers>
</Configuration>